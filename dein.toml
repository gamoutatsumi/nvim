[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'kevinhwang91/nvim-hlslens'
hook_add = '''
noremap <silent> n <Cmd>execute('normal! ' . v:count1 . 'n')<CR><Cmd>lua require('hlslens').start()<CR>
noremap <silent> N <Cmd>execute('normal! ' . v:count1 . 'N')<CR><Cmd>lua require('hlslens').start()<CR>
noremap * *<Cmd>lua require('hlslens').start()<CR>
noremap # #<Cmd>lua require('hlslens').start()<CR>
noremap g* g*<Cmd>lua require('hlslens').start()<CR>
noremap g# g#<Cmd>lua require('hlslens').start()<CR>
nnoremap <silent> <Esc><Esc> :nohlsearch<CR>
'''

[[plugins]]
repo = 'bluz71/vim-nightfly-guicolors'
hook_add = '''
lua << EOF
  vim.cmd('au MyAutoCmd VimEnter * nested colorscheme nightfly')
  vim.g.airline_theme = 'nightfly'
EOF
'''

[[plugins]]
repo = 'machakann/vim-sandwich'
hook_add = '''
lua << EOF
  vim.api.nvim_set_var('sandwitch_no_default_key_mappings', 1)
  vim.api.nvim_set_var('operator_sandwitch_no_default_key_mappings', 1)
  vim.api.nvim_set_keymap('n', 'ys', '<Plug>(operator-sandwich-add)', { silent = true })
  vim.api.nvim_set_keymap('n', 'ds', '<Plug>(operator-sandwich-delete)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sandwich-query-a)', { silent = true })
  vim.api.nvim_set_keymap('n', 'cs', '<Plug>(operator-sandwich-replace)<Plug>(operator-sandwich-release-count)<Plug>(textobj-sandwich-query-a)', { silent = true })
EOF
'''

[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
hook_add = '''
lua require('gitsigns').setup()
'''

[[plugins]]
repo = 'thinca/vim-quickrun'

#[[plugins]]
#repo = 'osyo-manga/vim-precious'
#depends = ['context_filetype.vim']
#hook_add = '''
#lua << EOF
#local precious_enable_switchers = {
  #vue = {
    #setfiletype = 0
  #}
#}
#precious_enable_switchers['*'] = {
  #setfiletype = 1
#}
#vim.api.nvim_set_var('precious_enable_switchers', precious_enable_switchers)

#vim.cmd('augroup VimPrecious')
#vim.cmd('autocmd!')
#vim.cmd('autocmd InsertEnter * PreciousSwitch')
#vim.cmd('autocmd InsertLeave * PreciousReset')
#vim.cmd('augroup END')
#vim.cmd('autocmd User PreciousFileType_vim :TSBufDisable highlight')
#EOF
#'''

#[[plugins]]
#repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
lua << EOF
  vim.g.WebDevIconsNerdTreeBeforeGlyphPadding = ''
  vim.g.WebDevIconsUnicodeDecorateFolderNodes = true
  if (vim.fn.exists('g:loaded_webdevicons') == 1) then
    vim.fn['webdevicons#refresh']()
  end
EOF
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
lua require('plugins.coc')
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'antoinemadec/coc-fzf'
rev = 'release'

[[plugins]]
repo = 'glepnir/galaxyline.nvim'
hook_add = '''
lua require('plugins.galaxyline_setting')
'''

[[plugins]]
repo = 'itchyny/vim-parenmatch'

[[plugins]]
repo = 'honza/vim-snippets'
hook_add = '''
lua << EOF
  vim.g.UltiSnipsExpandTrigger = '<NUL>'
  vim.g.UltiSnipsListSnippets = '<NUL>'
EOF
'''

#[[plugins]]
#repo = 'edkolev/tmuxline.vim'
#hook_add = '''
#let g:tmuxline_preset = {
  #\ 'a': '[#S:#I:#P]',
  #\ 'win': ['#I', '#{?#{m:ssh,#W},#{ssh-host},#W} #F'],
  #\ 'cwin': ['#I','#{?#{m:ssh,#W},#{ssh-host},#W} #F'],
  #\ 'y': ['%Y-%m-%d', '%H:%M'],
  #\ 'options': {
    #\ 'status': 'on',
    #\ 'status-left-style': 'none',
    #\ 'status-right-style': 'none',
    #\ 'status-right-length': '100',
    #\ 'status-left-length': '100',
  #\   }
  #\ }
#let g:tmuxline_status_justify = 'left'
#'''

[[plugins]]
repo = 'lambdalisue/fern.vim'
hook_add = '''
lua require('plugins.fern')
'''

[[plugins]]
repo = 'lambdalisue/fern-git-status.vim'

[[plugins]]
repo = 'lambdalisue/fern-hijack.vim'

[[plugins]]
repo = 'lambdalisue/fern-renderer-nerdfont.vim'

[[plugins]]
repo = 'lambdalisue/glyph-palette.vim'

[[plugins]]
repo = 'lambdalisue/nerdfont.vim'

[[plugins]]
repo = 'antoinemadec/FixCursorHold.nvim'

[[plugins]]
repo = 'skanehira/gh.vim'
hook_add = '''
lua << EOF
  vim.g.gh_token = vim.env.GH_VIM_TOKEN
EOF
'''

[[plugins]]
repo = 'APZelos/blamer.nvim'
hook_add = '''
lua << EOF
  vim.g.blamer_enabled = 1
  vim.g.blamer_date_format = '%Y/%m/%d %H:%M'
EOF
'''

[[plugins]]
repo = 'koron/nyancat-vim'

[[plugins]]
repo = 'wakatime/vim-wakatime'

[[plugins]]
repo = 'mbbill/undotree'
hook_add = '''
lua << EOF
  vim.api.nvim_set_keymap('n', '<Leader>u', '<cmd>UndotreeToggle<CR>', { noremap = true })
EOF
'''

[[plugins]]
repo = 'lambdalisue/suda.vim'
hook_add = '''
lua << EOF
  vim.g.suda_smart_edit = 1
EOF
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_add = '''
lua require('plugins.treesitter_setting')
'''

[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
hook_add = '''
lua require'colorizer'.setup()
'''

[[plugins]]
repo = 'lambdalisue/gina.vim'

[[plugins]]
repo = 'bellflower2015/vim-syntax-tyranoscript'

[[plugins]]
repo = 'Shougo/deol.nvim'
hook_add = '''
lua << EOF
  vim.api.nvim_set_keymap('n', '<C-o>', '<cmd>Deol -split=otherwise -toggle -winheight=10<CR>', { noremap = true, silent = true })
  vim.api.nvim_set_keymap('t', '<ESC>', '<C-\\><C-n>', { noremap = true })
EOF
'''

[[plugins]]
repo = 'romgrk/nvim-treesitter-context'

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'

[[plugins]]
repo = 'romgrk/barbar.nvim'
hook_add = '''
lua << EOF
  vim.api.nvim_set_keymap('n', '<C-s>', '<cmd>BufferPick<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<leader>bd', '<cmd>BufferOrderByDirectory<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<leader>bl', '<cmd>BufferOrderByLanguage<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<S-TAB>', '<cmd>BufferPrevious<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<TAB>', '<cmd>BufferNext<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-<>', '<cmd>BufferMovePrevious<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A->>', '<cmd>BufferMoveNext<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-1>', '<cmd>BufferGoto 1<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-2>', '<cmd>BufferGoto 2<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-3>', '<cmd>BufferGoto 3<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-4>', '<cmd>BufferGoto 4<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-5>', '<cmd>BufferGoto 5<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-6>', '<cmd>BufferGoto 6<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-7>', '<cmd>BufferGoto 7<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-8>', '<cmd>BufferGoto 8<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-9>', '<cmd>BufferLast<CR>', { silent = true, noremap = true })
  vim.api.nvim_set_keymap('n', '<A-c>', '<cmd>BufferClose<CR>', { silent = true, noremap = true })
EOF
'''

[[plugins]]
repo = 'AndrewRadev/switch.vim'

[[plugins]]
repo = 'monaqa/dial.nvim'
hook_add = '''
lua << EOF
  vim.api.nvim_set_keymap('n', '<C-a>', '<Plug>(dial-increment)', { silent = true , noremap = false })
  vim.api.nvim_set_keymap('n', '<C-x>', '<Plug>(dial-decrement)', { silent = true , noremap = false })
EOF
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
autocmd FileType denite call s:denite_my_settings()
function! s:denite_my_settings() abort
  nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
  nnoremap <silent><buffer><expr> d denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q denite#do_map('quit')
  nnoremap <silent><buffer><expr> i denite#do_map('open_fileter_buffer')
  nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
endfunction
'''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

[[plugins]]
repo = 'nvim-lua/popup.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
hook_add = '''
lua << EOF
  vim.api.nvim_set_keymap('n', '<leader>ff', '<cmd>lua require("telescope.builtin").find_files()<CR>', { noremap = true })
  vim.api.nvim_set_keymap('n', '<leader>fg', '<cmd>lua require("telescope.builtin").live_grep()<CR>', { noremap = true })
  vim.api.nvim_set_keymap('n', '<leader>fb', '<cmd>lua require("telescope.builtin").buffers()<CR>', { noremap = true })
  vim.api.nvim_set_keymap('n', '<leader>fh', '<cmd>lua require("telescope.builtin").help_tags()<CR>', { noremap = true })
EOF
'''

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter-refactor'

[[plugins]]
repo = 'skanehira/gyazo.vim'

[[plugins]]
repo = 'skanehira/badapple.vim'

[[plugins]]
repo = 'glepnir/indent-guides.nvim'
hook_add = '''
lua << EOF
  require('indent_guides').setup({
    indent_levels = 30;
    indent_guide_size = 1;
    indent_start_level = 1;
    indent_space_guides = true;
    indent_tab_guides = false;
    indent_soft_pattern = '\\s';
    exclude_filetypes = {'help','dashboard','dashpreview','NvimTree','vista','sagahover'};
    even_colors = { fg ='#2E323A',bg='#34383F' };
    odd_colors = {fg='#34383F',bg='#2E323A'};
  })
EOF
'''

[[plugins]]
repo = 'vim-jp/vital.vim'
merged = 0

[[plugins]]
repo = 'lambdalisue/vital-Whisky'
merged = 0

#[[plugins]]
#repo = '~/Repositories/github.com/skanehira/docker.vim'
